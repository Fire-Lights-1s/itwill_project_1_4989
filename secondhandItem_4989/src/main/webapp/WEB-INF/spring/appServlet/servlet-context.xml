<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/webjars/**" location="/webjars/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- web socket handler -->
<!--     <beans:bean id="socketTextHandler" class="com.itwillbs.websocket.SocketTextHandler"/> -->
<!-- 	<websocket:handlers> -->
<!--         <websocket:mapping path="/chatting" handler="socketTextHandler"/> -->
<!--         <websocket:handshake-interceptors> -->
<!-- 			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/> -->
<!-- 		</websocket:handshake-interceptors> -->
<!--         <websocket:sockjs websocket-enabled="true"/> -->
<!--     </websocket:handlers> -->

	<!-- multipartResolver -->
 	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 		<beans:property name="maxUploadSize" value="10485760"></beans:property>
 	</beans:bean>
	<!-- 경로 설정 -->
	<beans:bean id="uploadPath" class="java.lang.String">
	    <beans:constructor-arg value="D:\\workspace_sts\\itwill_project_1_4989\\secondhandItem_4989\\src\\main\\webapp\\resources\\upload" />
	</beans:bean>
	
	<context:component-scan base-package="com.itwillbs.secondhand4989"/>
	<context:component-scan base-package="com.itwillbs.controller"/>
	<context:component-scan base-package="com.itwillbs.service"/>
	<context:component-scan base-package="com.itwillbs.dao"/>
	<context:component-scan base-package="com.itwillbs.websocket"/>
	<context:component-scan base-package="com.itwillbs.config"/>
	
	 <!-- 메일 전송 설정 -->
    <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <beans:property name="host" value="smtp.gmail.com" />
        <beans:property name="port" value="587" />
        <beans:property name="username" value="ssrtomoya@gmail.com" />
        <beans:property name="password" value="fpir jgie sttw hopd" />
        
        <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.debug">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
	
</beans:beans>
